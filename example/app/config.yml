
default:

  # test configuration starts
  test_configs:
    stackName: '{{stackName}}'
    bucket: '{{buckets.internal.name}}'
    distributionEndpoint: '{{api_distribution_url}}'
    ems_provider: CUMULUS
    IngestGranule:
      IngestGranuleOutput:
        granules:
          - files:
            - bucket: '{{buckets.protected.name}}'
              filename: "s3://{{buckets.protected.name}}/MOD09GQ/2017/MOD/MOD09GQ.A2016358.h13v04.006.2016360104606.hdf"
            - bucket: '{{buckets.private.name}}'
              filename: "s3://{{buckets.private.name}}/MOD09GQ/MOD/MOD09GQ.A2016358.h13v04.006.2016360104606.hdf.met"
            - bucket: '{{buckets.public.name}}'
              filename: "s3://{{buckets.public.name}}/MOD09GQ/MOD/MOD09GQ.A2016358.h13v04.006.2016360104606_ndvi.jpg"
            - bucket: '{{buckets.protected-2.name}}'
              filename: "s3://{{buckets.protected-2.name}}/MOD09GQ/MOD/MOD09GQ.A2016358.h13v04.006.2016360104606.cmr.xml"
      SyncGranuleOutput:
        granules:
          - files:
            - bucket: '{{buckets.internal.name}}'
              filename: 's3://{{buckets.internal.name}}/file-staging/{{stackName}}/MOD09GQ/MOD09GQ.A2016358.h13v04.006.2016360104606.hdf'
              fileStagingDir: 'file-staging/{{stackName}}/MOD09GQ'
            - bucket: '{{buckets.internal.name}}'
              filename: 's3://{{buckets.internal.name}}/file-staging/{{stackName}}/MOD09GQ/MOD09GQ.A2016358.h13v04.006.2016360104606.hdf.met'
              fileStagingDir: 'file-staging/{{stackName}}/MOD09GQ'
            - bucket: '{{buckets.internal.name}}'
              filename: 's3://{{buckets.internal.name}}/file-staging/{{stackName}}/MOD09GQ/MOD09GQ.A2016358.h13v04.006.2016360104606_ndvi.jpg'
              fileStagingDir: 'file-staging/{{stackName}}/MOD09GQ'
    SyncGranule:
      granules:
        - files:
          - bucket: '{{buckets.internal.name}}'
            filename: 's3://{{buckets.internal.name}}/custom-staging-dir/{{stackName}}/MOD09GQ/MOD09GQ.A2016358.h13v04.006.2016360104606.hdf'
            fileStagingDir: 'custom-staging-dir/{{stackName}}/MOD09GQ'
          - bucket: '{{buckets.internal.name}}'
            filename: 's3://{{buckets.internal.name}}/custom-staging-dir/{{stackName}}/MOD09GQ/MOD09GQ.A2016358.h13v04.006.2016360104606.hdf.met'
            fileStagingDir: 'custom-staging-dir/{{stackName}}/MOD09GQ'
  # test configuration ends

  stackName: 'change-me'
  # stackNameNoDash: TestCumulusIntegration
  shared_data_bucket: cumulus-data-shared
  api_distribution_url: https://example.com/
  params:
    - name: CmrPassword
      value: '{{CMR_PASSWORD}}'
    - name: DockerEmail
      value: '{{DOCKER_EMAIL}}'
    - name: DockerPassword
      value: '{{DOCKER_PASS}}'

  apiStage: dev

  vpc:
    vpcId: '{{VPC_ID}}'
    subnets:
      - '{{AWS_SUBNET}}'

  ecs:
    instanceType: t2.small
    desiredInstances: 1
    availabilityZone: us-east-1b
    amiid: ami-a7a242da
    publicIp: true
    restartTasksOnDeploy: true
    docker:
      username: cumulususer
    services:
      EcsTaskHelloWorld:
        image: cumuluss/cumulus-ecs-task:1.1.2
        cpu: 400
        memory: 700
        count: 1
        envs:
          AWS_DEFAULT_REGION:
            function: Fn::Sub
            value: '${AWS::Region}'
        commands:
          - cumulus-ecs-task
          - '--activityArn'
          - function: Ref
            value: EcsTaskHelloWorldActivity
          - '--lambdaArn'
          - function: Ref
            value: HelloWorldLambdaFunction

  activities:
    - name: EcsTaskHelloWorld

  system_bucket: '{{buckets.internal.name}}'

  buckets:
    internal:
      name: cumulus-test-sandbox-internal
      type: internal
    private:
      name: cumulus-test-sandbox-private
      type: private
    protected:
      name: cumulus-test-sandbox-protected
      type: protected
    public:
      name: cumulus-test-sandbox-public
      type: public
    protected-2:
      name: cumulus-test-sandbox-protected-2
      type: protected
    shared:
      name: cumulus-data-shared
      type: shared

  cmr:
    username: '{{CMR_USERNAME}}'
    provider: CUMULUS
    clientId: CUMULUS
    password: '{{CMR_PASSWORD}}'

  iams:
    ecsRoleArn: 'arn:aws:iam::{{AWS_ACCOUNT_ID}}:role/{{stackName}}-ecs'
    lambdaApiGatewayRoleArn: 'arn:aws:iam::{{AWS_ACCOUNT_ID}}:role/{{stackName}}-lambda-api-gateway'
    lambdaProcessingRoleArn: 'arn:aws:iam::{{AWS_ACCOUNT_ID}}:role/{{stackName}}-lambda-processing'
    stepRoleArn: 'arn:aws:iam::{{AWS_ACCOUNT_ID}}:role/{{stackName}}-steprole'
    instanceProfile: 'arn:aws:iam::{{AWS_ACCOUNT_ID}}:instance-profile/{{stackName}}-ecs'
    distributionRoleArn: 'arn:aws:iam::{{AWS_ACCOUNT_ID}}:role/{{stackName}}-distribution-api-lambda'
    scalingRoleArn: 'arn:aws:iam::{{AWS_ACCOUNT_ID}}:role/{{stackName}}-scaling-role'

  sns:
    inregions3:
      subscriptions:
        lambda:
          endpoint:
            function: Fn::GetAtt
            array:
              - InRegionS3PolicyLambdaFunction
              - Arn
          protocol: lambda
    AmazonIpSpaceChanged:
      arn: arn:aws:sns:us-east-1:806199016981:AmazonIpSpaceChanged
      subscriptions:
        lambda:
          endpoint:
            function: Fn::GetAtt
            array:
              - InRegionS3PolicyLambdaFunction
              - Arn
          protocol: lambda
    sftracker:
      subscriptions:
        2ndlambda:
          endpoint:
            function: Fn::GetAtt
            array:
              - SnsS3TestLambdaFunction
              - Arn
          protocol: lambda

  urs_url: https://uat.urs.earthdata.nasa.gov/ #make sure to include the trailing slash

    # if not specified the value of the apigateway backend endpoint is used
    # api_backend_url: https://apigateway-url-to-api-backend/ #make sure to include the trailing slash

    # if not specified the value of the apigateway dist url is used
    # api_distribution_url: https://apigateway-url-to-distribution-app/ #make sure to include the trailing slash

  # URS users who should have access to the dashboard application.
  users:
    - username: testuser

cumulus-from-npm:
  stackName: test-npm-integration # used by the integration repo
  stackNameNoDash: TestNpmIntegration

cumulus-from-source:
  stackName: test-src-integration # used by the cumulus repo
  stackNameNoDash: TestSourceIntegration

cumulus-from-pr:
  stackName: test-pr-integration # used by the PR
  stackNameNoDash: TestPrIntegration

aj:
  stackName: aj-integration
  stackNameNoDash: AjIntegration

aimee-test:
  stackName: aimee-test
  stackNameNoDash: aimeeTest


lf:
  stackName: lf-cumulus
  stackNameNoDash: lfCumulus

  es:
    elasticSearchMapping: 6

kk-uat-deployment:
  stackName: kk-test-uat
  stackNameNoDash: KkTestUat

mth-2:
  stackName: mth-2
  stackNameNoDash: Mth2
  buckets:
    internal:
      name: '{{stackName}}-internal'
      type: internal
    private:
      name: '{{stackName}}-private'
      type: private
    protected:
      name: '{{stackName}}-protected'
      type: protected
    protected-2:
      name: '{{stackName}}-protected'
      type: protected
    public:
      name: '{{stackName}}-public'
      type: public
  users:
    - username: '{{EARTHDATA_LOGIN_USERNAME}}'

jl:
  stackName: jl-test-integration
  stackNameNoDash: JlTestIntegration
  buckets:
    private:
      name: jl-test-integration-private
      type: private
    protected:
      name: jl-test-integration-protected
      type: protected
    public:
      name: jl-test-integration-public
      type: public
    protected-2:
      name: jl-test-integration-protected-2
      type: protected
    shared-2:
      name: rvl-internal
      type: shared
